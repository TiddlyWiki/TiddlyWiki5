title: $:/plugins/tiddlywiki/freelinks/readme

This plugin transforms TiddlyWiki into a more connected experience by intelligently auto-linking text to existing tiddler titles, creating a web of knowledge that emerges naturally as you write.

''✨ Built with cutting-edge Aho-Corasick algorithm optimization - handles thousands of tiddlers without breaking a sweat!''

!! ⚙️ Quick Setup

The magic happens when these conditions are met:
* `tv-wikilinks` is NOT set to `no` 
* `tv-freelinks` is set to `yes`

''Pro tip'': Toggle case sensitivity and word boundary checking in the settings panel to fine-tune your linking experience!

🌍 ''Universal Language Support'': Works seamlessly with any language - English, 中文, 日本語, العربية, русский - you name it! The plugin intelligently handles Unicode characters and uses locale-aware sorting to prioritize longer, more specific matches.

🎯 ''Smart Matching'': Longer titles take precedence (so "Machine Learning Guide" links before just "Machine"), and the plugin cleverly avoids self-referential links within the current tiddler.

Within view templates, the variable `tv-freelinks` is automatically set to the value of `$:/config/Freelinks/Enable`, which can be adjusted through the plugin's settings interface.

!! 🔧 Advanced Configuration

To customize which tiddlers trigger freelinking, modify the shadow tiddler [[$:/plugins/tiddlywiki/freelinks/macros/view]]. This tiddler is tagged `$:/tags/Macro/View`, ensuring it acts as a local macro in each view template. The default content is:

```
<$set name="tv-freelinks" value={{$:/config/Freelinks/Enable}}/>
```

This sets `tv-freelinks` to the value of `$:/config/Freelinks/Enable` (either "yes" or "no") for each tiddler, as defined in the control panel settings.

For more specific control, you can use filter expressions. For example, to enable freelinking only within the tiddler titled "HelloThere":

```
<$set name="tv-freelinks" value={{{ [<currentTiddler>match[HelloThere]then[yes]else[no]] }}}/>
```

To limit freelinking to tiddlers tagged "MyTag":

```
<$set name="tv-freelinks" value={{{ [<currentTiddler>tag[MyTags]then[yes]else[no]] }}}/>
```

You can also combine conditions, such as freelinking only for "HelloThere" with the "MyTag" tag:

```
<$set name="tv-freelinks" value={{{ [<currentTiddler>match[HelloThere]] ~[<currentTiddler>tag[MyTag]] +[then[yes]else[no]] }}}/>
```

!! 🎨 Feature Highlights

''🎯 Target Filter'': Use `$:/config/Freelinks/TargetFilter` to define which tiddlers get the auto-link treatment

''🔤 Word Boundary Intelligence'' (Western languages):<br>
  - ''Enabled'' (default): Links only complete words → @@__Yes__@@ eyes eYes (only "Yes" gets linked)<br>
  - ''Disabled'': Links partial matches too → @@__Yes__@@ eyes e@@__Yes__@@ (both "Yes" instances get linked)

''🧠 Smart Prioritization'': "Machine Learning Tutorial" gets linked before just "Machine" - context matters!

''🚫 Self-Link Prevention'': No awkward self-references - tiddlers don't link to themselves

!! ⚡ Under the Hood

''Lightning-Fast Algorithm'': Powered by optimized Aho-Corasick with smart safeguards:<br>
* ''Depth Protection'': Max 100 failure link transitions per character<br>
* ''Scale Handling'': Processes up to 100K nodes (or 15× your pattern count)<br>
* ''Result Limiting'': Cap of 10,000 matches per text block<br>
* ''Memory Smart'': Uses TiddlyWiki's global cache for blazing performance

''Bulletproof Reliability'':<br>
* Invalid patterns? Skipped automatically<br>
* Algorithm hiccups? Falls back gracefully to normal text<br>
* Unicode chaos? Properly escaped and handled

//Perfect for wikis with thousands of tiddlers - stress tested and ready for action!//

!! 🙏 Credits & Thanks

Built with love and powered by AI collaboration:<br>
- 🤖 ''[[Grok|https://grok.com/?referrer=website]]'' (60%) - The creative spark<br>
- 🧠 ''[[Claude|https://claude.ai/new]]'' (40%) - The technical precision

*A heartfelt thank you to both AI assistants for making this ambitious rewrite possible!*

---
*Questions? Issues? The TiddlyWiki community is here to help! 🚀*
