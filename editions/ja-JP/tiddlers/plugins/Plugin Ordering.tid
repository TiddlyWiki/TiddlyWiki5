created: 20220613115453346
modified: 20250207104327815
original-modified: 20220628160136158
tags: PluginMechanism
title: Plugin Ordering
ja-title: プラグインの順序
type: text/vnd.tiddlywiki

Node.jsクライアント-サーバー構成を使用すると、プラグインは次の順序でアクティブになります: 

# OS環境変数を使用して見つかったプラグイン
#* 参照: [[PluginFolders]]
#* および: [[Node.jsの環境変数|Environment Variables on Node.js]]

# Wiki`/plugins`パスに保存されたプラグイン
#* 参照: [[PluginFolders]]

# コマンドラインで指定されたプラグイン
#* 参照: [[Node.jsでTiddlyWikiを使用する|Using TiddlyWiki on Node.js]] ... <<.from-version "5.1.20">>に関する注記

# ドラッグアンドドロップでWikiコンテンツとしてインポートされたプラグイン
#* 参照: [[プラグインライブラリからプラグインをインストールする|Installing a plugin from the plugin library]]や[[プラグインを手動でインストールする|Manually installing a plugin]]

''重要:''

* ''リストの下位の要素が優先されます''

*ブラウザにドラッグアンドドロップして通常のTiddlerとしてプラグインを追加すると、プラグインはブラウザ内でのみアクティブになります
** Node.js下では利用できません

オプション 1:

* Node.js構成を使用する場合、オプション1が最も一般的な方法です
* すべてのプラグインを一度に更新できるため、メンテナンスの手間が軽減されます

オプション 2:

* 構成を固定して作業したい場合はオプション2が推奨されます
* プラグインの更新は対応するWikiにのみ影響します

オプション 3:

* このオプションを使用すると、既存の`tiddlywiki.info`ファイルを上書きすることなくエディションを''追加して開始''できます
* tiddlywiki.infoファイルで指定されていない場合でも、任意のエディションをクライアント-サーバーエディションとして起動できます。

オプション 4:

* 単一ファイルのWikiで使用されるのと全く同じメカニズムです
* このメカニズムは、プラグインが`tiddlers/`ディレクトリに保存されるため、Node.js構成では''テストとデバッグ''の目的でのみ使用する必要があります
