caption: variables
created: 20190330100101453
modified: 20240501101748198
op-input: ignored
op-output: the names of all the actively defined variables
op-parameter: <<.from-version "5.3.4">> whitespace separated list of variable-types
op-parameter-name: T
op-purpose: select the names of all the actively defined variables
op-suffix: <<.from-version "5.3.4">> deafults to: "sort", optional: "raw", see more details below
op-suffix-name: S
tags: [[Filter Operators]] [[Special Operators]] [[Selection Constructors]]
title: variables Operator
type: text/vnd.tiddlywiki

<<.from-version "5.1.20">> The primary purpose of the `variables` operator is to implement the <<.mlink dumpvariables>> or the <<.mlink serach-variables>> macros.

`[variables:<sort>[<parameters>]]`

''Possible Suffixes: <<.place S>>:'' <<.from-version "5.3.4">>

* ''alphabetical'' (default): By default the returned list is alphabetically sorted
* ''raw'': The variable list will be returned as created. The variables "near" the filter run will show up first. So if variables are defined in the tiddler, where the <<.mlink dumpvariables>> or <<.mlink search-variables>> macros are executed, they will be listed first. 

''Parameters <<.place T>>:'' <<.from-version "5.3.4">>

The parameters <<.place T>> allow a ''whitespace separated list'' of variable codes that should be listed

* Default is `all` or `fn, var, proc, macro, widget`

* ''all'' ... If set it takes precedence and will show all variables
* ''fn'' ... Will only show variables defined as functions eg: `\function test-01()`
* ''var'' ... Will only show standard variables defined with eg: `<$let test="test">...</$let>`
* ''proc'' ... Will only show variables defined as procedures eg: `\procedure test-02()`
* ''macro'' ... Will only show variables defined as macros eg: `\define test-macro()`
* ''widgets'' ... Will only show variables defined as widgets eg: `\widget my-widget()`


<<.operator-examples "variables">>
