icon: $:/avatars/poulstaugaard
modified: 20110306000000000
modifier: poulstaugaard
tags: [[2010 - How did you first discover TiddlyWiki?]] [[2010 - Interview Answer]]
title: 2010 - How did you first discover TiddlyWiki? - poulstaugaard - 2011-03-06T00:00:00.000Z

I am quite a veteran TW addict. The wiki idea first caught my fancy when I stumbled on <a href="javascript:;" title="The tiddler 'FlexWiki' doesn't yet exist" class="tiddlyLink tiddlyLinkNonExisting" refresh="link" tiddlylink="FlexWiki" tiddlyfields="server.type:&quot;tiddlyweb&quot; server.host:&quot;http://interview.tiddlyspace.com&quot; server.workspace:&quot;bags/poulstaugaard_public&quot;">FlexWiki</a> in 2003. Initially I hung out at <a href="javascript:;" title="The tiddler 'MeatBallWiki' doesn't yet exist" class="tiddlyLink tiddlyLinkNonExisting" refresh="link" tiddlylink="MeatBallWiki" tiddlyfields="server.type:&quot;tiddlyweb&quot; server.host:&quot;http://interview.tiddlyspace.com&quot; server.workspace:&quot;bags/poulstaugaard_public&quot;">MeatBallWiki</a> for inspiration while scanning the landscape and finding my direction. This is how i discovered TW while it was still a baby. Coming from the Microsoft/IT services world, with a wide interest in web technology, my first serious efford was a .NET (C# + SQL) based serverside that I called iewiki (spelled like that not to be misread as <a href="javascript:;" title="The tiddler 'LeWiki' doesn't yet exist" class="tiddlyLink tiddlyLinkNonExisting" refresh="link" tiddlylink="LeWiki" tiddlyfields="server.type:&quot;tiddlyweb&quot; server.host:&quot;http://interview.tiddlyspace.com&quot; server.workspace:&quot;bags/poulstaugaard_public&quot;">LeWiki</a>). It was built on unmodified TW 2.0.6 client-side, and I used it myself on the web for a few years (as iewiki.net, now defunct). I was never quite happy with the end product though, and it never quite made it past beta status - partly due to the rather high cost of quality hosting for .NET. So when I found Google's App engine, I decided to start again from scratch, an efford which I have called giewiki for natural reasons. By this time (late 2008), I figured TW had reached a level of maturity (2.4.1) that made branching a good strategy for a hosted derivative.<br>