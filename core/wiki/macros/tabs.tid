title: $:/core/macros/tabs
tags: $:/tags/Macro
code-body: yes

\whitespace trim
\procedure tabs-button()
<$button
	set=<<tabsState>>
	setTo=<<currentTab>>
	default=<<default>>
	selectedClass="tc-tab-selected"
	tooltip={{!!tooltip}}
	role="switch"
	data-tab-title=<<currentTab>>
>
	<$tiddler tiddler=<<save-currentTiddler>>>
		<$let tv-wikilinks="no">
			<$transclude $tiddler=<<buttonTemplate>> $mode="inline">
				<$transclude $tiddler=<<currentTab>> $field="caption">
					<$transclude $variable="currentTab" $type="text/plain" $output="text/plain"/>
				</$transclude>
			</$transclude>
		</$let>
	</$tiddler>
	<<actions>>
</$button>
\end

\procedure tabs-tab()
<$let save-currentTiddler=<<currentTiddler>>>
	<$tiddler tiddler=<<currentTab>>>
		<<tabs-button>>
	</$tiddler>
</$let>
\end

\procedure tabs-tab-list()
<$list filter=<<tabsList>> variable="currentTab" storyview="pop">
	<<tabs-tab>>
</$list>
\end

\procedure tabs-tab-body()
<$list filter=<<tabsList>> variable="currentTab">
	<$reveal type="match" state=<<tabsState>> text=<<currentTab>> default=<<default>> retain=<<retain>> tag="div">
		<$transclude $tiddler=<<template>> $mode="block">
			<$transclude $tiddler=<<currentTab>> $mode="block"/>
		</$transclude>
	</$reveal>
</$list>
\end

\procedure tabs(tabsList,default,state:"$:/state/tab",class,template,buttonTemplate,retain,actions,explicitState)
<$qualify title=<<state>> name="qualifiedState">
	<$let tabsState={{{ [<explicitState>minlength[1]] :else[<qualifiedState>] }}}>
		<div class={{{ [[tc-tab-set]addsuffix[ ]addsuffix<class>] }}}>
			<div class={{{ [[tc-tab-buttons]addsuffix[ ]addsuffix<class>] }}}>
				<<tabs-tab-list>>
			</div>
			<div class={{{ [[tc-tab-divider]addsuffix[ ]addsuffix<class>] }}}/>
			<div class={{{ [[tc-tab-content]addsuffix[ ]addsuffix<class>] }}}>
				<<tabs-tab-body>>
			</div>
		</div>
	</$let>
</$qualify>
\end